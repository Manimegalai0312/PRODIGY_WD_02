<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Neon Stopwatch</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&family=Montserrat:wght@300;500;700&display=swap');
        
        :root {
            --neon-blue: #00f2fe;
            --neon-pink: #fe00f2;
            --neon-purple: #b721ff;
            --neon-green: #00ff9d;
            --dark-bg: #0f0f1a;
            --darker-bg: #080811;
            --glass-bg: rgba(15, 15, 26, 0.6);
            --text-light: rgba(255,255,255,0.9);
            --text-lighter: rgba(255,255,255,0.7);
            --transition: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Montserrat', sans-serif;
            background: var(--dark-bg);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            color: var(--text-light);
            overflow-x: hidden;
            position: relative;
        }

        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: 
                radial-gradient(circle at 20% 30%, rgba(179, 0, 255, 0.15) 0%, transparent 40%),
                radial-gradient(circle at 80% 70%, rgba(0, 242, 254, 0.15) 0%, transparent 40%);
            z-index: -2;
            animation: gradientPulse 16s ease infinite alternate;
        }

        @keyframes gradientPulse {
            0% { opacity: 0.7; }
            50% { opacity: 1; }
            100% { opacity: 0.7; }
        }

        .particles {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            overflow: hidden;
        }

        .particle {
            position: absolute;
            background: rgba(255,255,255,0.5);
            border-radius: 50%;
            filter: blur(1px);
            animation: float linear infinite;
        }

        @keyframes float {
            to { transform: translateY(-100vh) rotate(360deg); }
        }

        .stopwatch-container {
            width: 95%;
            max-width: 600px;
            perspective: 1000px;
        }

        .stopwatch {
            background: var(--glass-bg);
            backdrop-filter: blur(12px);
            -webkit-backdrop-filter: blur(12px);
            border-radius: 25px;
            padding: 2.5rem;
            box-shadow: 
                0 20px 50px rgba(0, 0, 0, 0.3),
                inset 0 1px 1px rgba(255,255,255,0.1);
            border: 1px solid rgba(255,255,255,0.1);
            transform-style: preserve-3d;
            transition: var(--transition);
            position: relative;
            overflow: hidden;
            z-index: 1;
        }

        .stopwatch::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(
                to bottom right,
                transparent,
                transparent,
                rgba(183, 33, 255, 0.1),
                rgba(0, 242, 254, 0.1)
            );
            transform: rotate(30deg);
            z-index: -1;
            animation: shine 8s linear infinite;
        }

        @keyframes shine {
            0% { transform: rotate(30deg) translate(-30%, -30%); }
            100% { transform: rotate(30deg) translate(30%, 30%); }
        }

        .stopwatch-header {
            text-align: center;
            margin-bottom: 1.5rem;
            position: relative;
        }

        .stopwatch-title {
            font-family: 'Orbitron', sans-serif;
            font-weight: 700;
            font-size: 1.8rem;
            background: linear-gradient(90deg, var(--neon-blue), var(--neon-pink));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            text-transform: uppercase;
            letter-spacing: 3px;
            margin-bottom: 0.5rem;
            text-shadow: 0 0 10px rgba(183, 33, 255, 0.3);
        }

        .stopwatch-subtitle {
            font-weight: 300;
            font-size: 0.9rem;
            color: var(--text-lighter);
            letter-spacing: 1px;
        }

        .display-container {
            position: relative;
            margin: 2rem 0;
            padding: 1.5rem;
            background: rgba(0,0,0,0.3);
            border-radius: 15px;
            box-shadow: 
                inset 0 4px 15px rgba(0,0,0,0.5),
                0 5px 15px rgba(0,0,0,0.3);
            border: 1px solid rgba(255,255,255,0.05);
            overflow: visible;
        }

        .display-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 3px;
            background: linear-gradient(90deg, var(--neon-blue), var(--neon-pink));
        }

        .display {
            font-family: 'Orbitron', sans-serif;
            font-size: 3rem; /* Changed from 4rem to 3rem */
            font-weight: 700;
            text-align: center;
            background: linear-gradient(135deg, var(--text-light), var(--text-lighter));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            text-shadow: 0 0 10px rgba(255,255,255,0.2);
            letter-spacing: 2px;
            position: relative;
            line-height: 1.2;
            padding: 0.5rem;
            overflow: visible;
        }

        .display.running {
            animation: textGlow 1.5s ease-in-out infinite alternate;
        }

        @keyframes textGlow {
            from { text-shadow: 0 0 5px rgba(0, 242, 254, 0.5); }
            to { text-shadow: 0 0 15px rgba(0, 242, 254, 0.8), 0 0 20px rgba(183, 33, 255, 0.5); }
        }

        .controls {
            display: flex;
            justify-content: center;
            gap: 1.5rem;
            margin: 2.5rem 0;
            position: relative;
        }

        .btn {
            width: 70px;
            height: 70px;
            border-radius: 50%;
            border: none;
            background: rgba(15, 15, 26, 0.7);
            color: white;
            font-size: 1.7rem;
            cursor: pointer;
            transition: var(--transition);
            display: flex;
            justify-content: center;
            align-items: center;
            box-shadow: 
                0 5px 15px rgba(0,0,0,0.3),
                inset 0 1px 1px rgba(255,255,255,0.1);
            position: relative;
            overflow: hidden;
            border: 1px solid rgba(255,255,255,0.1);
        }

        .btn::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(
                to bottom right,
                rgba(255,255,255,0.1),
                transparent
            );
            transform: rotate(30deg);
            transition: var(--transition);
        }

        .btn:hover {
            transform: translateY(-5px) scale(1.05);
            box-shadow: 0 8px 25px rgba(0,0,0,0.4);
        }

        .btn:hover::before {
            transform: rotate(30deg) translate(20%, 20%);
        }

        .btn:active {
            transform: translateY(0) scale(0.95);
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--neon-green), #00cc7f);
        }

        .btn-warning {
            background: linear-gradient(135deg, var(--neon-pink), #d400c9);
        }

        .btn-danger {
            background: linear-gradient(135deg, #ff3366, #ff0066);
        }

        .btn-secondary {
            background: linear-gradient(135deg, var(--neon-blue), #00b7e6);
        }

        .btn:disabled {
            opacity: 0.5;
            transform: none !important;
            cursor: not-allowed;
            box-shadow: none;
        }

        .btn:disabled::before {
            display: none;
        }

        .laps-container {
            max-height: 250px;
            overflow-y: auto;
            padding: 1.5rem;
            background: rgba(0,0,0,0.2);
            border-radius: 15px;
            margin-top: 1.5rem;
            box-shadow: 
                inset 0 4px 15px rgba(0,0,0,0.3),
                0 5px 15px rgba(0,0,0,0.2);
            border: 1px solid rgba(255,255,255,0.05);
        }

        .laps-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
            padding-bottom: 0.8rem;
            border-bottom: 1px solid rgba(255,255,255,0.1);
            position: sticky;
            top: 0;
            background: rgba(15, 15, 26, 0.8);
            backdrop-filter: blur(5px);
            z-index: 1;
        }

        .laps-title {
            font-family: 'Orbitron', sans-serif;
            font-size: 1.3rem;
            font-weight: 500;
            background: linear-gradient(90deg, var(--neon-blue), var(--neon-pink));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            letter-spacing: 2px;
        }

        .laps-count {
            background: linear-gradient(135deg, var(--neon-purple), var(--neon-pink));
            color: white;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 0.9rem;
            font-weight: bold;
            box-shadow: 0 0 10px rgba(183, 33, 255, 0.3);
        }

        .lap-item {
            display: flex;
            justify-content: space-between;
            padding: 1rem 0;
            border-bottom: 1px solid rgba(255,255,255,0.05);
            animation: fadeIn 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            transition: var(--transition);
        }

        .lap-item:hover {
            transform: translateX(5px);
        }

        .lap-number {
            font-weight: 600;
            color: var(--text-light);
            position: relative;
            padding-left: 1.5rem;
        }

        .lap-number::before {
            content: '';
            position: absolute;
            left: 0;
            top: 50%;
            transform: translateY(-50%);
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background: var(--neon-blue);
            box-shadow: 0 0 5px var(--neon-blue);
        }

        .lap-time {
            font-family: 'Orbitron', sans-serif;
            letter-spacing: 1px;
        }

        .fastest .lap-number::before {
            background: var(--neon-green);
            box-shadow: 0 0 5px var(--neon-green);
        }

        .fastest {
            color: var(--neon-green);
        }

        .slowest .lap-number::before {
            background: var(--danger);
            box-shadow: 0 0 5px #ff3366;
        }

        .slowest {
            color: #ff3366;
        }

        @keyframes fadeIn {
            from { 
                opacity: 0; 
                transform: translateY(20px) scale(0.95); 
            }
            to { 
                opacity: 1; 
                transform: translateY(0) scale(1); 
            }
        }

        ::-webkit-scrollbar {
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: rgba(255,255,255,0.05);
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb {
            background: linear-gradient(var(--neon-blue), var(--neon-purple));
            border-radius: 10px;
        }

        @media (max-width: 768px) {
            .display {
                font-size: 2.5rem; /* Changed from 3.5rem to 2.5rem */
            }
            
            .btn {
                width: 60px;
                height: 60px;
                font-size: 1.5rem;
            }
            
            .stopwatch {
                padding: 2rem 1.5rem;
            }
        }

        @media (max-width: 480px) {
            .display {
                font-size: 2rem; /* Changed from 2.8rem to 2rem */
            }
            
            .controls {
                gap: 1rem;
            }
            
            .btn {
                width: 55px;
                height: 55px;
                font-size: 1.3rem;
            }
            
            .stopwatch-title {
                font-size: 1.5rem;
            }
        }
    </style>
</head>
<body>
    <div class="particles" id="particles"></div>
    
    <div class="stopwatch-container">
        <div class="stopwatch">
            <div class="stopwatch-header">
                <h1 class="stopwatch-title">STOPWATCH</h1>
                <p class="stopwatch-subtitle">Precision Time Measurement</p>
            </div>
            
            <div class="display-container">
                <div class="display" id="display">00:00:00.00</div>
            </div>
            
            <div class="controls">
                <button class="btn btn-primary" id="startBtn" title="Start">
                    <i class="fas fa-play"></i>
                </button>
                <button class="btn btn-warning" id="pauseBtn" disabled title="Pause">
                    <i class="fas fa-pause"></i>
                </button>
                <button class="btn btn-danger" id="resetBtn" disabled title="Reset">
                    <i class="fas fa-stop"></i>
                </button>
                <button class="btn btn-secondary" id="lapBtn" disabled title="Lap">
                    <i class="fas fa-flag"></i>
                </button>
            </div>
            
            <div class="laps-container">
                <div class="laps-header">
                    <span class="laps-title">Lap Times</span>
                    <span class="laps-count" id="lapCount">0</span>
                </div>
                <div id="lapsList"></div>
            </div>
        </div>
    </div>

    <script>
        // Create floating particles
        function createParticles() {
            const container = document.getElementById('particles');
            const particleCount = window.innerWidth < 768 ? 30 : 50;
            
            for (let i = 0; i < particleCount; i++) {
                const particle = document.createElement('div');
                particle.classList.add('particle');
                
                const size = Math.random() * 2 + 1;
                particle.style.width = `${size}px`;
                particle.style.height = `${size}px`;
                particle.style.left = `${Math.random() * 100}vw`;
                particle.style.top = `${Math.random() * 100}vh`;
                
                const duration = Math.random() * 20 + 20;
                particle.style.animationDuration = `${duration}s`;
                particle.style.animationDelay = `${Math.random() * 20}s`;
                
                container.appendChild(particle);
            }
        }

        // Initialize particles
        createParticles();

        // DOM elements
        const display = document.getElementById('display');
        const startBtn = document.getElementById('startBtn');
        const pauseBtn = document.getElementById('pauseBtn');
        const resetBtn = document.getElementById('resetBtn');
        const lapBtn = document.getElementById('lapBtn');
        const lapsList = document.getElementById('lapsList');
        const lapCount = document.getElementById('lapCount');

        // Stopwatch variables
        let startTime;
        let elapsedTime = 0;
        let timerInterval;
        let isRunning = false;
        let laps = [];
        let fastestLap = null;
        let slowestLap = null;

        // Format time as HH:MM:SS.mm
        function formatTime(time) {
            const date = new Date(time);
            const hours = date.getUTCHours().toString().padStart(2, '0');
            const minutes = date.getUTCMinutes().toString().padStart(2, '0');
            const seconds = date.getUTCSeconds().toString().padStart(2, '0');
            const milliseconds = Math.floor(date.getUTCMilliseconds() / 10).toString().padStart(2, '0');
            
            return `${hours}:${minutes}:${seconds}.${milliseconds}`;
        }

        // Update the display
        function updateDisplay() {
            display.textContent = formatTime(elapsedTime);
        }

        // Start the stopwatch
        function start() {
            if (!isRunning) {
                startTime = Date.now() - elapsedTime;
                timerInterval = setInterval(function() {
                    elapsedTime = Date.now() - startTime;
                    updateDisplay();
                }, 10);
                isRunning = true;
                
                startBtn.disabled = true;
                pauseBtn.disabled = false;
                resetBtn.disabled = false;
                lapBtn.disabled = false;
                
                display.classList.add('running');
                startBtn.style.transform = 'scale(0.95)';
                setTimeout(() => {
                    startBtn.style.transform = '';
                }, 200);
            }
        }

        // Pause the stopwatch
        function pause() {
            if (isRunning) {
                clearInterval(timerInterval);
                isRunning = false;
                
                startBtn.disabled = false;
                pauseBtn.disabled = true;
                
                display.classList.remove('running');
                pauseBtn.style.transform = 'scale(0.95)';
                setTimeout(() => {
                    pauseBtn.style.transform = '';
                }, 200);
            }
        }

        // Reset the stopwatch
        function reset() {
            clearInterval(timerInterval);
            isRunning = false;
            elapsedTime = 0;
            updateDisplay();
            laps = [];
            fastestLap = null;
            slowestLap = null;
            updateLapsDisplay();
            
            startBtn.disabled = false;
            pauseBtn.disabled = true;
            resetBtn.disabled = true;
            lapBtn.disabled = true;
            
            display.classList.remove('running');
            resetBtn.style.transform = 'scale(0.95)';
            setTimeout(() => {
                resetBtn.style.transform = '';
            }, 200);
        }

        // Record a lap
        function lap() {
            if (isRunning) {
                const lapTime = elapsedTime - (laps.length > 0 ? laps.reduce((a, b) => a + b.time, 0) : 0);
                const lapData = {
                    number: laps.length + 1,
                    time: lapTime,
                    total: elapsedTime
                };
                
                laps.push(lapData);
                
                if (!fastestLap || lapTime < fastestLap.time) {
                    fastestLap = lapData;
                }
                if (!slowestLap || lapTime > slowestLap.time) {
                    slowestLap = lapData;
                }
                
                updateLapsDisplay();
                lapBtn.style.transform = 'scale(0.95)';
                setTimeout(() => {
                    lapBtn.style.transform = '';
                }, 200);
            }
        }

        // Update the laps display
        function updateLapsDisplay() {
            lapsList.innerHTML = '';
            lapCount.textContent = laps.length;
            
            if (laps.length === 0) {
                const emptyMessage = document.createElement('div');
                emptyMessage.className = 'lap-item';
                emptyMessage.style.justifyContent = 'center';
                emptyMessage.style.color = 'var(--text-lighter)';
                emptyMessage.textContent = 'No laps recorded yet';
                lapsList.appendChild(emptyMessage);
                return;
            }
            
            const header = document.createElement('div');
            header.className = 'lap-item';
            header.innerHTML = `
                <span class="lap-number">Total</span>
                <span class="lap-time">${formatTime(elapsedTime)}</span>
            `;
            lapsList.appendChild(header);
            
            const reversedLaps = [...laps].reverse();
            
            reversedLaps.forEach(lap => {
                const lapElement = document.createElement('div');
                lapElement.className = 'lap-item';
                
                let lapClass = '';
                if (fastestLap && lap.number === fastestLap.number) {
                    lapClass = 'fastest';
                } else if (slowestLap && lap.number === slowestLap.number) {
                    lapClass = 'slowest';
                }
                
                lapElement.innerHTML = `
                    <span class="lap-number ${lapClass}">Lap ${lap.number}</span>
                    <span class="lap-time ${lapClass}">${formatTime(lap.time)}</span>
                `;
                lapsList.appendChild(lapElement);
            });
        }

        // Event listeners
        startBtn.addEventListener('click', start);
        pauseBtn.addEventListener('click', pause);
        resetBtn.addEventListener('click', reset);
        lapBtn.addEventListener('click', lap);

        // Initialize display
        updateDisplay();
    </script>
</body>
</html>
